# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# NOTES:
# automatic variables
# $@ - target name
# $^ - target dependencies 
# command substitution - must escape '$' as '$$'

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
# THIS PATH MUST BE RELATIVE
GTEST_DIR = ../../../../Tools/googletest/googletest
# ^ /home/bilkitg/Tools/googletest/googletest

# Where to find user code.
USER_DIR = ..

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -ggdb -std=c++11 -Wall -Wextra -pthread 
CXXFLAGS += `pkg-config --cflags opencv`

# Link against opencv libs 
CVLIBS += `pkg-config --libs opencv`

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = UtLoadImage UtTransforms

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : $(TESTS)

clean :
	rm -f $(TESTS) gtest.a gtest_main.a *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

# Generate static library for gtest api
gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# Test rule definition
LoadImage.o : $(USER_DIR)/LoadImage.cpp $(USER_DIR)/LoadImage.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(CVLIBS) -c $(USER_DIR)/LoadImage.cpp

UtLoadImage.o : UtLoadImage.cpp $(USER_DIR)/LoadImage.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c UtLoadImage.cpp

# Link against gtest_main.a since LoadImage has no main function.
UtLoadImage : LoadImage.o UtLoadImage.o gtest.a
	$(CXX) $(CPPFLAGS) $^ -o $@ $(CXXFLAGS) $(CVLIBS) -lpthread

MotionModel.o : $(USER_DIR)/MotionModel.cpp $(USER_DIR)/MotionModel.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/MotionModel.cpp

UtTransforms.o : UtTransforms.cpp $(USER_DIR)/MotionModel.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c UtTransforms.cpp

UtTransforms : MotionModel.o UtTransforms.o gtest.a
	$(CXX) $(CPPFLAGS) $^ -o $@ $(CXXFLAGS) -lpthread